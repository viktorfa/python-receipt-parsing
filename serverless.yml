service: serverless-receipt-scanning # NOTE: update this with your service name
frameworkVersion: "3"
useDotenv: true

provider:
  name: aws
  runtime: python3.9
  memorySize: 1024
  timeout: 12
  region: eu-central-1
  profile: serverless-admin
  logRetentionInDays: 30
  versionFunctions: false

  environment:
    GOOGLE_APPLICATION_CREDENTIALS: ../.credentials/gcloud-credentials.json
    MONGO_URI: ${env:MONGO_URI}
    MONGO_DATABASE: ${env:MONGO_DATABASE}
    GRAPHQL_URL: ${env:GRAPHQL_URL}
    HASURA_ADMIN_SECRET: ${env:HASURA_ADMIN_SECRET}
    JWT_SECRET: ${env:JWT_SECRET}
    JWT_ALG: ${env:JWT_ALG}

package:
  include:
    - recread/**
    - data/**
    - .credentials/**
  exclude:
    - ./**

functions:
  app-url:
    handler: wsgi_handler.handler
    url:
      cors: false

resources:
  Resources:
    DynamoDBIamPolicy:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: lambda-dynamodb
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:*
              Resource: arn:aws:dynamodb:*:*:*
        Roles:
          - Ref: IamRoleLambdaExecution

plugins:
  - serverless-python-requirements
  - serverless-offline
  - serverless-wsgi

custom:
  wsgi:
    app: recread.serverless.wsgi.app
    packRequirements: false
  pythonRequirements:
    dockerizePip: true # Had some problem with C libs in python if using no-linux
    slim: true # Omits tests, __pycache__, *.pyc etc from dependencies
    useDownloadCache: true
    useStaticCache: true
    noDeploy:
      - ipykernel
      - jupyter-client
      - jupyter-core
      - pkg-resources
      - black
      - mypy
      - boto3
      - botocore
      - matplotlib
      #- scipy.libs
      #- numpy.libs
      #- numpy
      - PIL
      - Pillow.libs
      - IPython
    fileName: requirements.txt
